@Test
public void testNotLeaderDoesNotProcessMessage() throws Exception {
    String testInstanceId = "instance-A";
    String testLeaderId = "instance-B";

    IMap<String, String> leaderMap = mock(IMap.class);
    IMap<String, String> routerMap = mock(IMap.class);
    IMap<String, Object> targetMap = mock(IMap.class);

    when(hazelcastInstance.getMap("router-leader-map")).thenReturn(leaderMap);
    when(hazelcastInstance.getMap("router-claim-map")).thenReturn(routerMap);
    when(hazelcastInstance.getMap(startsWith("map-"))).thenReturn(targetMap);
    when(leaderMap.get("leader-myFlow")).thenReturn(testLeaderId);  // different from routerInstanceId

    router = new GenericHazelcastRouter(hazelcastInstance, List.of(config), handlerRegistry, testInstanceId);
    router.initRouters();

    byte[] rawMessage = "data".getBytes();
    Object deserialized = new Object();
    String corrId = "test-corr-id";

    when(handler.deserializeRequest(rawMessage)).thenReturn(deserialized);
    when(handler.extractCorrelationId(deserialized)).thenReturn(corrId);

    Message<byte[]> message = mock(Message.class);
    when(message.getMessageObject()).thenReturn(rawMessage);

    ArgumentCaptor<MessageListener<byte[]>> captor = ArgumentCaptor.forClass(MessageListener.class);
    verify(topic).addMessageListener(captor.capture());

    captor.getValue().onMessage(message);

    verify(routerMap, never()).putIfAbsent(anyString(), anyString());
    verify(targetMap, never()).put(anyString(), any());
}
