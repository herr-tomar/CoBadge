 @Test
    public void testDuplicateMessageNotProcessed() throws Exception {
        router.initRouters();

        Map<String, Object> requestMap = Map.of("dup", "check");
        byte[] rawMessage = new com.fasterxml.jackson.databind.ObjectMapper().writeValueAsBytes(requestMap);
        String corrId = sampleFlowHandler.extractCorrelationId(requestMap);

        routerMap.put("route-lock-" + corrId, "existing"); // simulate lock already taken

        topic.publish(rawMessage);
        Thread.sleep(500);

        assertFalse(targetMap.containsKey(corrId), "Duplicate message should not be routed");
    }

    @Test
    public void testRoutingHandlerThrowsException() throws Exception {
        router.initRouters();

        String faulty = "faultyRequest";
        byte[] rawMessage = faulty.getBytes();

        topic.publish(rawMessage);
        Thread.sleep(500);

        assertTrue(routerMap.isEmpty(), "No lock should be acquired on handler failure");
        assertTrue(targetMap.isEmpty(), "Faulty request should not be routed");
    }

    @Test
    public void testNotLeaderDoesNotSubscribeToTopics() {
        heartbeatMap.put("heartbeat", System.currentTimeMillis());
        leaderMap.put("active-router", "some-other-instance");

        router.initRouters();

        // Publish a message, but router should not be listening
        topic.publish("irrelevant".getBytes());

        // Delay to ensure nothing processed
        try {
            Thread.sleep(500);
        } catch (InterruptedException ignored) {}

        assertTrue(targetMap.isEmpty(), "Non-leader should not route messages");
    }
