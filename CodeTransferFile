@Test
public void testMessageRoutedSuccessfully() throws Exception {
    // Setup + ensure leadership state
    leaderMap.clear();
    heartbeatMap.clear();
    routerMap.clear();
    targetMap.clear();
    testCollector.clear();

    router.setRouterInstanceId(routerInstanceId);
    router.initRouters();

    // Ensure router becomes leader
    await().atMost(5, TimeUnit.SECONDS)
           .pollInterval(100, TimeUnit.MILLISECONDS)
           .until(() -> routerInstanceId.equals(leaderMap.get("active-router")));

    // Wait for subscription to complete (or topic readiness)
    Thread.sleep(500); // safe buffer

    // Prepare request
    Map<String, Object> request = Map.of("key", "value");
    String corrId = sampleFlowHandler.extractCorrelationId(request);

    // Ensure no premature claim exists
    assertFalse(routerMap.containsKey("route-lock-" + corrId));

    // Publish after confirmed leader state and subscription
    topic.publish(new ObjectMapper().writeValueAsBytes(request));

    // Verify routing success
    await().atMost(5, TimeUnit.SECONDS)
           .pollInterval(100, TimeUnit.MILLISECONDS)
           .untilAsserted(() -> {
               assertTrue(testCollector.wasSent(flowConfig.responseTopic()));
               assertEquals("wrappedResponse", testCollector.getSent(flowConfig.responseTopic()));
               assertTrue(targetMap.containsKey(corrId), "Message should be present in routed map");
           });
}
