package osplus.pkptuna.dispute.service.impl;

import org.apache.http.HttpHeaders;
import org.mapstruct.factory.Mappers;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.boot.context.properties.EnableConfigurationProperties;
import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import org.springframework.web.reactive.function.client.WebClient;
import osplus.pkptuna.dispute.config.DisputeServiceProperties;
import osplus.pkptuna.rest.dispute.create.model.mapper.DisputeCreateRequestDtoMapper;
import osplus.pkptuna.rest.dispute.ibo.create.model.mapper.AmountDtoMapper;
import osplus.pkptuna.rest.dispute.ibo.create.model.mapper.DisputeDocumentRequestDtoMapper;
import osplus.pkptuna.rest.dispute.ibo.create.model.mapper.DisputeEventRequestDtoMapper;
import osplus.pkptuna.rest.dispute.ibo.create.model.mapper.DisputePostingRequestDtoMapper;

@Configuration
@EnableConfigurationProperties(DisputeServiceProperties.class)
public class ProjecteigeneTestConfiguration {

    @Bean
    public DisputeCreateRequestDtoMapper disputeCreateRequestDtoMapper() {
        return Mappers.getMapper(DisputeCreateRequestDtoMapper.class);
    }

    @Bean
    public DisputeEventRequestDtoMapper disputeEventRequestDtoMapper() {
        return Mappers.getMapper(DisputeEventRequestDtoMapper.class);
    }

    @Bean
    public AmountDtoMapper amountDtoMapper() {
        return Mappers.getMapper(AmountDtoMapper.class);
    }

    @Bean
    public DisputePostingRequestDtoMapper disputePostingRequestDtoMapper() {
        return Mappers.getMapper(DisputePostingRequestDtoMapper.class);
    }

    @Bean
    public DisputeDocumentRequestDtoMapper disputeDocumentRequestDtoMapper() {
        return Mappers.getMapper(DisputeDocumentRequestDtoMapper.class);
    }

    @Bean
    public WebClient webClient(@Value("${dispute.base-url}") String baseUrl) {
        return WebClient.builder()
                .baseUrl(baseUrl)
                .defaultHeader(HttpHeaders.CONTENT_TYPE, "application/json")
                .build();
    }

    @Bean
    public DisputeDetailServiceImpl disputeDetailService(WebClient webClient, DisputeServiceProperties props) {
        return new DisputeDetailServiceImpl(webClient, props);
    }

    @Bean
    public DisputeServiceImpl disputeService(WebClient webClient,
                                             DisputeServiceProperties props,
                                             DisputeCreateRequestDtoMapper disputeCreateRequestDtoMapper
                                             ) {
        return new DisputeServiceImpl(
                webClient,
                props,
                disputeCreateRequestDtoMapper);
    }
}
