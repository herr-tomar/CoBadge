package osplus.pkptuna.hazelcast.config;

import org.springframework.context.annotation.Bean;
import org.springframework.context.annotation.Configuration;
import osplus.pkptuna.hazelcast.flows.FlowHandler;
import osplus.pkptuna.hazelcast.flows.FlowHandlerRegistry;

import java.util.List;
import java.util.Map;

@Configuration
public class TestFlowHandlerConfiguration {

    @Bean
    public FlowHandler testFlowHandler() {
        return new TestFlowHandler(); // Your real implementation (not a mock)
    }

    @Bean
    public FlowHandlerRegistry<String, FlowHandler> flowHandlerRegistry() {
        return new FlowHandlerRegistry<>();
    }

    @Bean
    public HazelcastFlowBootstrap hazelcastFlowBootstrap() {
        return new HazelcastFlowBootstrap(); // if required, or mock here
    }

    @Bean
    public FlowHandlerInitializer flowHandlerInitializer(
            FlowHandlerRegistry<String, FlowHandler> registry,
            HazelcastFlowBootstrap bootstrap,
            FlowHandler testFlowHandler
    ) {
        FlowConfig config = new FlowConfig("myFlow", "req", "res", "map-", 1);
        Map<String, FlowHandler> handlers = Map.of("myFlow", testFlowHandler);

        return new FlowHandlerInitializer(List.of(config), handlers, registry, bootstrap);
    }
}
