public static List<ProtoMessageModel> parse(File protoFile) {
    List<ProtoMessageModel> messageModels = new ArrayList<>();

    try (BufferedReader reader = new BufferedReader(new FileReader(protoFile))) {
        String packageName = null;
        ProtoMessageModel currentMessage = null;

        String line;
        while ((line = reader.readLine()) != null) {
            line = line.trim();

            // Remove inline comments
            int commentIdx = line.indexOf("//");
            if (commentIdx != -1) {
                line = line.substring(0, commentIdx).trim();
            }

            if (line.startsWith("package ")) {
                String[] parts = line.split("\\s+");
                if (parts.length >= 2) {
                    packageName = parts[1].replace(";", "").trim();
                }
            } else if (line.startsWith("message ")) {
                String messageName = line.split("\\s+")[1].replace("{", "").trim();
                currentMessage = new ProtoMessageModel(messageName);
                currentMessage.setProtoPackageName(packageName);
                currentMessage.setPackageName(packageName);
            } else if (line.startsWith("}")) {
                if (currentMessage != null) {
                    messageModels.add(currentMessage);
                    currentMessage = null;
                }
            } else if (currentMessage != null && !line.isEmpty() && line.contains(";")) {
                // Parse field declaration
                boolean repeated = line.startsWith("repeated ");
                String cleanedLine = line.replaceAll("^(optional|required|repeated)\\s+", "");
                cleanedLine = cleanedLine.replaceAll("[=;].*$", ""); // Strip assignment and trailing semicolon
                String[] parts = cleanedLine.trim().split("\\s+");

                if (parts.length >= 2) {
                    String type = parts[0].trim();
                    String name = parts[1].trim();
                    currentMessage.addField(new ProtoFieldModel(type, name, repeated));
                }
            }
        }
    } catch (Exception e) {
        LOGGER.error("Failed to parse proto file: " + protoFile.getName(), e);
    }

    return messageModels;
}
