@Test
public void testMessageRoutedSuccessfully() throws Exception {
    // Ensure router has a clean start and becomes leader
    leaderMap.clear();
    heartbeatMap.clear();
    routerMap.clear();
    targetMap.clear();
    testCollector.clear();

    router.setRouterInstanceId(routerInstanceId);
    router.initRouters();

    // Wait for router to assume leadership and start listening
    await()
        .atMost(2, TimeUnit.SECONDS)
        .pollInterval(100, TimeUnit.MILLISECONDS)
        .until(() -> "test-router-instance".equals(leaderMap.get("active-router")));

    // Prepare a valid request
    Map<String, Object> request = Map.of("key", "value");
    String corrId = sampleFlowHandler.extractCorrelationId(request);

    // Send the message AFTER listeners are active
    topic.publish(new ObjectMapper().writeValueAsBytes(request));

    // Verify the response was sent to the correct topic
    await()
        .atMost(2, TimeUnit.SECONDS)
        .pollInterval(100, TimeUnit.MILLISECONDS)
        .untilAsserted(() -> {
            assertTrue(testCollector.wasSent(flowConfig.responseTopic()), "Expected message to be routed and response sent");
            assertEquals("wrappedResponse", testCollector.getSent(flowConfig.responseTopic()));
        });
}
