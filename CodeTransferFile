@Test
public void testNotLeaderDoesNotProcessMessage() throws Exception {
    // Arrange
    router = new GenericHazelcastRouter(hazelcastInstance, List.of(config), handlerRegistry);
    
    // Mock the leader map before init
    IMap<String, String> leaderMap = mock(IMap.class);
    when(hazelcastInstance.getMap("router-leader-map")).thenReturn(leaderMap);
    
    // Simulate that a different instance is the leader
    when(leaderMap.get("leader-myFlow")).thenReturn("some-other-instance-id");

    router.initRouters();

    byte[] rawMessage = "data".getBytes();
    Object deserialized = new Object();
    String corrId = "test-corr-id";

    when(handler.deserializeRequest(rawMessage)).thenReturn(deserialized);
    when(handler.extractCorrelationId(deserialized)).thenReturn(corrId);

    Message<byte[]> message = mock(Message.class);
    when(message.getMessageObject()).thenReturn(rawMessage);

    ArgumentCaptor<com.hazelcast.topic.MessageListener<byte[]>> captor =
            ArgumentCaptor.forClass(com.hazelcast.topic.MessageListener.class);
    verify(topic).addMessageListener(captor.capture());

    // Act
    captor.getValue().onMessage(message);

    // Assert: No routing should happen since this instance is not the leader
    verify(routerMap, never()).putIfAbsent(anyString(), anyString());
    verify(targetMap, never()).put(anyString(), any());
}
