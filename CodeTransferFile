@Test
public void testMessageRoutedSuccessfully() {
    leaderMap.clear();
    heartbeatMap.clear();

    router.setRouterInstanceId(routerInstanceId);
    router.initRouters();

    Map<String, Object> request = Map.of("key", "value");
    String corrId = sampleFlowHandler.extractCorrelationId(request);
    topic.publish(new ObjectMapper().writeValueAsBytes(request));

    await()
            .atMost(2, TimeUnit.SECONDS)
            .pollInterval(50, TimeUnit.MILLISECONDS)
            .untilAsserted(() -> {
                assertTrue(testCollector.wasSent(flowConfig.responseTopic()), "Expected message to be routed and response sent");
                assertEquals("wrappedResponse", testCollector.getSent(flowConfig.responseTopic()));
                assertEquals(routerInstanceId, routerMap.get("route-lock-" + corrId), "Claim should be recorded by router");
            });
}

@Test
public void testDuplicateMessageNotProcessed() throws Exception {
    router.setRouterInstanceId(routerInstanceId);
    leaderMap.put("active-router", routerInstanceId);
    heartbeatMap.put("heartbeat", System.currentTimeMillis());

    router.initRouters();

    Map<String, Object> requestMap = Map.of("dup", "check");
    String corrId = sampleFlowHandler.extractCorrelationId(requestMap);
    routerMap.put("route-lock-" + corrId, "existing"); // simulate claim already held

    topic.publish(new ObjectMapper().writeValueAsBytes(requestMap));

    await()
            .during(1, TimeUnit.SECONDS)
            .atMost(2, TimeUnit.SECONDS)
            .untilAsserted(() -> assertFalse(testCollector.wasSent(flowConfig.responseTopic())));
}

@Test
public void testRoutingHandlerThrowsException() throws Exception {
    router.setRouterInstanceId(routerInstanceId);
    leaderMap.put("active-router", routerInstanceId);
    heartbeatMap.put("heartbeat", System.currentTimeMillis());

    router.initRouters();

    // simulate a request that triggers handler to throw
    Map<String, Object> faulty = Map.of("key", "faultyRequest");
    topic.publish(new ObjectMapper().writeValueAsBytes(faulty));

    await()
            .during(1, TimeUnit.SECONDS)
            .atMost(2, TimeUnit.SECONDS)
            .untilAsserted(() -> assertFalse(testCollector.wasSent(flowConfig.responseTopic())));
}
