5-08-12 16:18:16.121  INFO 72276 --- [onPool-worker-2] o.p.h.pubsub.GenericHazelcastRouter     : Routed correlationId='88388e0a-1b95-4302-8f55-f5f839797be6' to map 'dispute-create-request-map-0'
2025-08-12 16:18:16.490 ERROR 72276 --- [pkptuna.event-6] o.p.d.service.impl.DisputeServiceImpl   : Exception during transactionId lookup (issuerId=, arn=)

org.springframework.web.reactive.function.client.WebClientResponseException$BadRequest: 400 Bad Request from POST http://4.239.136.13:43001/api/v2/search-transactions
	at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:321) ~[spring-webflux-6.2.8.jar:6.2.8]
	Suppressed: reactor.core.publisher.FluxOnAssembly$OnAssemblyException: 
Error has been observed at the following site(s):
	*__checkpoint â‡¢ 400 BAD_REQUEST from POST http://4.239.136.13:43001/api/v2/search-transactions [DefaultWebClient]
Original Stack Trace:
		at org.springframework.web.reactive.function.client.WebClientResponseException.create(WebClientResponseException.java:321) ~[spring-webflux-6.2.8.jar:6.2.8]
		at org.springframework.web.reactive.function.client.DefaultClientResponse.lambda$createException$1(DefaultClientResponse.java:214) ~[spring-webflux-6.2.8.jar:6.2.8]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:106) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxOnErrorReturn$ReturnSubscriber.onNext(FluxOnErrorReturn.java:162) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxDefaultIfEmpty$DefaultIfEmptySubscriber.onNext(FluxDefaultIfEmpty.java:122) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableSubscriber.onNext(FluxMapFuseable.java:129) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onNext(FluxMapFuseable.java:299) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxFilterFuseable$FilterFuseableConditionalSubscriber.onNext(FluxFilterFuseable.java:337) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.Operators$BaseFluxToMonoOperator.completePossiblyEmpty(Operators.java:2096) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.MonoCollect$CollectSubscriber.onComplete(MonoCollect.java:145) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxPublish$PublishSubscriber.checkTerminated(FluxPublish.java:634) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxPublish$PublishSubscriber.drain(FluxPublish.java:494) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxPublish$PublishSubscriber.onComplete(FluxPublish.java:355) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onComplete(FluxContextWrite.java:126) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxMapFuseable$MapFuseableConditionalSubscriber.onComplete(FluxMapFuseable.java:350) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drainAsync(FluxFlattenIterable.java:371) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.drain(FluxFlattenIterable.java:724) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxFlattenIterable$FlattenIterableSubscriber.onComplete(FluxFlattenIterable.java:273) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.adapter.JdkFlowAdapter$SubscriberToRS.onComplete(JdkFlowAdapter.java:160) ~[reactor-core-3.7.7.jar:3.7.7]
		at java.net.http/jdk.internal.net.http.ResponseSubscribers$PublishingBodySubscriber.complete(ResponseSubscribers.java:955) ~[java.net.http:na]
		at java.net.http/jdk.internal.net.http.ResponseSubscribers$PublishingBodySubscriber.lambda$new$1(ResponseSubscribers.java:886) ~[java.net.http:na]
		at java.base/java.util.concurrent.CompletableFuture$UniAccept.tryFire(CompletableFuture.java:718) ~[na:na]
		at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510) ~[na:na]
		at java.base/java.util.concurrent.CompletableFuture.complete(CompletableFuture.java:2179) ~[na:na]
		at java.net.http/jdk.internal.net.http.ResponseSubscribers$PublishingBodySubscriber.lambda$subscribe$3(ResponseSubscribers.java:983) ~[java.net.http:na]
		at java.base/java.util.concurrent.CompletableFuture.uniAcceptNow(CompletableFuture.java:757) ~[na:na]
		at java.base/java.util.concurrent.CompletableFuture.uniAcceptStage(CompletableFuture.java:735) ~[na:na]
		at java.base/java.util.concurrent.CompletableFuture.thenAccept(CompletableFuture.java:2214) ~[na:na]
		at java.net.http/jdk.internal.net.http.ResponseSubscribers$PublishingBodySubscriber.subscribe(ResponseSubscribers.java:979) ~[java.net.http:na]
		at reactor.adapter.JdkFlowAdapter$FlowPublisherAsFlux.subscribe(JdkFlowAdapter.java:68) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.InternalFluxOperator.subscribe(InternalFluxOperator.java:68) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxPublish.connect(FluxPublish.java:106) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxAutoConnect.subscribe(FluxAutoConnect.java:62) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.Flux.subscribe(Flux.java:8891) ~[reactor-core-3.7.7.jar:3.7.7]
		at org.springframework.http.client.reactive.AbstractClientHttpResponse$SingleSubscriberPublisher.subscribe(AbstractClientHttpResponse.java:112) ~[spring-web-6.2.8.jar:6.2.8]
		at reactor.core.publisher.FluxSource.subscribe(FluxSource.java:71) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.InternalMonoOperator.subscribe(InternalMonoOperator.java:76) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:165) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxContextWrite$ContextWriteSubscriber.onNext(FluxContextWrite.java:107) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxDoFinally$DoFinallySubscriber.onNext(FluxDoFinally.java:113) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.MonoPeekTerminal$MonoTerminalPeekSubscriber.onNext(MonoPeekTerminal.java:180) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxPeekFuseable$PeekConditionalSubscriber.onNext(FluxPeekFuseable.java:854) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxSwitchIfEmpty$SwitchIfEmptySubscriber.onNext(FluxSwitchIfEmpty.java:74) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onNext(FluxOnErrorResume.java:79) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxPeek$PeekSubscriber.onNext(FluxPeek.java:200) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.complete(MonoIgnoreThen.java:294) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.MonoIgnoreThen$ThenIgnoreMain.onNext(MonoIgnoreThen.java:188) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.FluxMap$MapSubscriber.onNext(FluxMap.java:122) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.MonoCompletionStage$MonoCompletionStageSubscription.apply(MonoCompletionStage.java:121) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.MonoCompletionStage$MonoCompletionStageSubscription.apply(MonoCompletionStage.java:67) ~[reactor-core-3.7.7.jar:3.7.7]
		at java.base/java.util.concurrent.CompletableFuture.uniHandle(CompletableFuture.java:934) ~[na:na]
		at java.base/java.util.concurrent.CompletableFuture$UniHandle.tryFire(CompletableFuture.java:911) ~[na:na]
		at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510) ~[na:na]
		at java.base/java.util.concurrent.CompletableFuture.postFire(CompletableFuture.java:614) ~[na:na]
		at java.base/java.util.concurrent.CompletableFuture$UniWhenComplete.tryFire(CompletableFuture.java:844) ~[na:na]
		at java.base/java.util.concurrent.CompletableFuture$Completion.exec(CompletableFuture.java:483) ~[na:na]
		at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387) ~[na:na]
		at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312) ~[na:na]
		at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843) ~[na:na]
		at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808) ~[na:na]
		at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188) ~[na:na]
	Suppressed: java.lang.Exception: #block terminated with an error
		at reactor.core.publisher.BlockingSingleSubscriber.blockingGet(BlockingSingleSubscriber.java:104) ~[reactor-core-3.7.7.jar:3.7.7]
		at reactor.core.publisher.Mono.block(Mono.java:1779) ~[reactor-core-3.7.7.jar:3.7.7]
		at osplus.pkptuna.dispute.service.impl.DisputeServiceImpl.lookUpIboTransactionId(DisputeServiceImpl.java:256) ~[classes/:na]
		at osplus.pkptuna.dispute.service.impl.DisputeServiceImpl.createDispute(DisputeServiceImpl.java:132) ~[classes/:na]
		at osplus.pkptuna.flows.handlers.DisputeCreateFlowHandler.handleRequest(DisputeCreateFlowHandler.java:38) ~[classes/:na]
		at osplus.pkptuna.flows.handlers.DisputeCreateFlowHandler.handleRequest(DisputeCreateFlowHandler.java:16) ~[classes/:na]
		at osplus.pkptuna.hazelcast.pubsub.GenericHazelcastConsumer$MapEntryListener.processEntry(GenericHazelcastConsumer.java:144) ~[classes/:na]
		at osplus.pkptuna.hazelcast.pubsub.GenericHazelcastConsumer$MapEntryListener.lambda$entryAdded$0(GenericHazelcastConsumer.java:107) ~[classes/:na]
		at io.micrometer.core.instrument.composite.CompositeTimer.record(CompositeTimer.java:141) ~[micrometer-core-1.15.1.jar:1.15.1]
		at io.micrometer.core.instrument.Timer.lambda$wrap$2(Timer.java:199) ~[micrometer-core-1.15.1.jar:1.15.1]
		at osplus.apl.core.administration.metrics.MetricsServiceImpl.timer(MetricsServiceImpl.java:107) ~[apl-core-services-251.0.0.jar:251.0.0]
		at osplus.pkptuna.hazelcast.pubsub.GenericHazelcastConsumer$MapEntryListener.entryAdded(GenericHazelcastConsumer.java:106) ~[classes/:na]
		at com.hazelcast.map.impl.MapListenerAdaptors.lambda$static$0(MapListenerAdaptors.java:55) ~[hazelcast-5.5.5.jar:5.5.5]
		at com.hazelcast.map.impl.InternalMapListenerAdapter.onEvent(InternalMapListenerAdapter.java:56) ~[hazelcast-5.5.5.jar:5.5.5]
		at com.hazelcast.map.impl.InternalMapListenerAdapter.onEvent(InternalMapListenerAdapter.java:35) ~[hazelcast-5.5.5.jar:5.5.5]
		at com.hazelcast.client.impl.proxy.ClientMapProxy$AbstractClientMapEventHandler.handleEntryEvent(ClientMapProxy.java:2104) ~[hazelcast-5.5.5.jar:5.5.5]
		at com.hazelcast.client.impl.proxy.ClientMapProxy$ClientMapEventHandler$1.handleEntryEvent(ClientMapProxy.java:2081) ~[hazelcast-5.5.5.jar:5.5.5]
		at com.hazelcast.client.impl.protocol.codec.MapAddEntryListenerCodec$AbstractEventHandler.handle(MapAddEntryListenerCodec.java:165) ~[hazelcast-5.5.5.jar:5.5.5]
		at com.hazelcast.client.impl.proxy.ClientMapProxy$ClientMapEventHandler.handle(ClientMapProxy.java:2089) ~[hazelcast-5.5.5.jar:5.5.5]
		at com.hazelcast.client.impl.proxy.ClientMapProxy$ClientMapEventHandler.handle(ClientMapProxy.java:2071) ~[hazelcast-5.5.5.jar:5.5.5]
		at com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl.handleEventMessageOnCallingThread(ClientListenerServiceImpl.java:215) ~[hazelcast-5.5.5.jar:5.5.5]
		at com.hazelcast.client.impl.spi.impl.listener.ClientListenerServiceImpl$ClientEventProcessor.run(ClientListenerServiceImpl.java:428) ~[hazelcast-5.5.5.jar:5.5.5]
		at com.hazelcast.internal.util.executor.StripedExecutor$Worker.process(StripedExecutor.java:244) ~[hazelcast-5.5.5.jar:5.5.5]
		at com.hazelcast.internal.util.executor.StripedExecutor$Worker.run(StripedExecutor.java:227) ~[hazelcast-5.5.5.jar:5.5.5]
