public class RouterLeaderHeartbeat implements Runnable {

    private final IMap<String, String> leaderMap;
    private final String routerInstanceId;
    private final String leaderKey = "active-router";

    // Recommended TTL (in seconds)
    private final long ttlSeconds = 30;

    // Run the put() every 2/3 of TTL to stay safe
    private final long refreshIntervalMs = ttlSeconds * 1000 * 2 / 3;

    public RouterLeaderHeartbeat(HazelcastInstance hazelcastInstance, String routerInstanceId) {
        this.leaderMap = hazelcastInstance.getMap("router-leader-map");
        this.routerInstanceId = routerInstanceId;
    }

    @Override
    public void run() {
        try {
            // Update with TTL
            leaderMap.put(leaderKey, routerInstanceId, ttlSeconds, TimeUnit.SECONDS);
        } catch (Exception e) {
            // Log failure
            System.err.println("Failed to refresh leader entry: " + e.getMessage());
        }
    }

    public void start() {
        Executors.newSingleThreadScheduledExecutor().scheduleAtFixedRate(
            this,
            0,
            refreshIntervalMs,
            TimeUnit.MILLISECONDS
        );
    }
}
