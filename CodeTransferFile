package osplus.pkptuna.dispute.service;

import osplus.pkptuna.dispute.create.model.DisputeCreateRequestDto;
import osplus.pkptuna.dispute.create.model.DisputeCreateResponseDto;
import osplus.pkptuna.dispute.lookup.model.DisputeLookupResponseDto;

/**
 * Schnittstelle für die Durchführung von Abfragen auf Dispute-Ordner.
 */
public interface DisputeService {

    /**
     * Führt eine Suche nach einem Dispute-Ordner basierend auf Issuer-ID und Kartenreferenz durch.
     *
     * @param issuerId die ID des Issuers
     * @param cardReference die Kartenreferenznummer
     * @return ein {@link DisputeLookupResponseDto} mit den Ergebnissen der Suche
     */
    DisputeLookupResponseDto lookupDisputeFolder(String issuerId, String cardReference);

    DisputeCreateResponseDto createDispute(DisputeCreateRequestDto disputeCreateRequestDto);
}

-----

package osplus.pkptuna.dispute.service;

import osplus.pkptuna.dispute.create.model.DisputeCreateRequestDto;
import osplus.pkptuna.dispute.create.model.DisputeCreateResponseDto;
import osplus.pkptuna.dispute.lookup.model.DisputeLookupResponseDto;

/**
 * Schnittstelle für die Durchführung von Abfragen auf Dispute-Ordner.
 */
public interface DisputeService {

    /**
     * Führt eine Suche nach einem Dispute-Ordner basierend auf Issuer-ID und Kartenreferenz durch.
     *
     * @param issuerId die ID des Issuers
     * @param cardReference die Kartenreferenznummer
     * @return ein {@link DisputeLookupResponseDto} mit den Ergebnissen der Suche
     */
    DisputeLookupResponseDto lookupDisputeFolder(String issuerId, String cardReference);

    DisputeCreateResponseDto createDispute(DisputeCreateRequestDto disputeCreateRequestDto);
}
