Listener Lifecycle

Consider adding metrics to track:

    Listener registration/removal success/failure (especially in GenericHazelcastConsumer)

metricsService.increaseCounter("hazelcast.listener.register.success", MetricTag.create("mapName", mapName));
metricsService.increaseCounter("hazelcast.listener.remove.success", MetricTag.create("mapName", mapName));


------

Heartbeat Tracking

GenericHazelcastRouter initiates and monitors heartbeat, but currently lacks metrics for:

    Heartbeat start

    Heartbeat failure

    Leadership acquisition/failure

metricsService.increaseCounter("hazelcast.router.heartbeat.started");
metricsService.increaseCounter("hazelcast.router.leadership.acquired", MetricTag.create("routerInstanceId", routerInstanceId));


--------

Processing Duration

For performance insight, add a timer metric in processEntry() and possibly in onMessage():

try (var ignored = metricsService.startTimer("hazelcast.message.consume.duration", MetricTag.create("flowName", flowName))) {
    // existing processing logic
}


--------

Missing Metrics on Skipped Messages

In GenericHazelcastConsumer, if:

if (handler == null) {
    LOGGER.warn("No FlowHandler for '{}' registered. Message will be skipped.", flowName);
    return;
}

a counter for this condition would help detect config issues.

metricsService.increaseCounter("hazelcast.message.consume.handler.missing", MetricTag.create("flowName", flowName));

--------

Publisher Bulk Metric

In sendMessages, metrics are not aggregated. You may want to:

    Add a bulk metric: hazelcast.message.send.bulk.count

    Or wrap the loop with timing logic

----------
