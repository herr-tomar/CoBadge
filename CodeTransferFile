@Test
void lookupDisputeFolder_shouldReturnSuccessResponse() {
    String correlationId = UUID.randomUUID().toString();

    var protoResponse = DisputeLookupResponseDto.newBuilder()
            .setIssuerId("issuer")
            .setCardReference("cardRef")
            .build();

    var restResponse = new osplus.pkptuna.rest.dispute.lookup.model.DisputeLookupResponseDto();
    restResponse.setIssuerId("issuer");
    restResponse.setCardReference("cardRef");

    disputeLookupResponseTracker.register(correlationId);
    disputeLookupResponseTracker.complete(correlationId, protoResponse);

    when(disputeLookupResponseDtoMapper.toRestDto(protoResponse)).thenReturn(restResponse);

    var response = disputeOrcaService.lookupDisputeFolder("issuer", "cardRef");

    assertEquals(200, response.getStatusCodeValue());
    assertEquals("success", response.getBody().getStatus());
    assertEquals(restResponse, response.getBody().getData());
}


@Test
void publishDisputeDetailRequest_shouldReturnSuccessResponse() {
    String correlationId = UUID.randomUUID().toString();

    var protoResponse = DisputeResponseDto.newBuilder()
            .setDisputeFolderReference("folder123")
            .setIssuerId("issuer")
            .build();

    var restResponse = new osplus.pkptuna.rest.dispute.model.DisputeResponseDto();
    restResponse.setDisputeFolderReference("folder123");
    restResponse.setIssuerId("issuer");

    disputeDetailResponseTracker.register(correlationId);
    disputeDetailResponseTracker.complete(correlationId, protoResponse);

    when(disputeResponseDtoMapper.toRestDto(protoResponse)).thenReturn(restResponse);

    var response = disputeOrcaService.publishDisputeDetailRequest("issuer", "folder123", "events,documents");

    assertEquals(200, response.getStatusCodeValue());
    assertEquals("success", response.getBody().getStatus());
    assertEquals(restResponse, response.getBody().getData());
}
