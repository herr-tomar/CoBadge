@Test
public void testNotLeaderDoesNotProcessMessage() throws Exception {
    // Given: A router instance that is NOT the leader
    String testInstanceId = "instance-A";
    String testLeaderId = "instance-B"; // different than instance-A

    // Override the leaderMap behavior
    @SuppressWarnings("unchecked")
    IMap<String, String> leaderMap = (IMap<String, String>) hazelcastInstance.getMap("router-leader-map");
    when(leaderMap.get("leader-myFlow")).thenReturn(testLeaderId);

    // Recreate router with overridden leader ID
    router = new GenericHazelcastRouter(hazelcastInstance, List.of(config), handlerRegistry, testInstanceId);
    router.initRouters();

    // Prepare test message
    byte[] rawMessage = "data".getBytes();
    Object deserialized = new Object();
    String corrId = "test-corr-id";

    when(handler.deserializeRequest(rawMessage)).thenReturn(deserialized);
    when(handler.extractCorrelationId(deserialized)).thenReturn(corrId);

    // Fire message
    Message<byte[]> message = mock(Message.class);
    when(message.getMessageObject()).thenReturn(rawMessage);

    ArgumentCaptor<MessageListener<byte[]>> captor = ArgumentCaptor.forClass(MessageListener.class);
    verify(topic).addMessageListener(captor.capture());

    captor.getValue().onMessage(message);

    // Then: Nothing should be routed
    verify(routerMap, never()).putIfAbsent(anyString(), anyString());
    verify(targetMap, never()).put(anyString(), any());
}
