@Test
public void testPollRequestMaps_HandlerThrowsException() throws Exception {
    String corrId = "id123";
    String routeKey = "route-lock-" + corrId;

    Object faultyRequest = new Object(); // Anything that causes failure
    requestMap.put(corrId, faultyRequest);
    routerMap.put(routeKey, "");

    // Simulate exception on handleRequest
    FlowHandler faultyHandler = mock(FlowHandler.class);
    when(faultyHandler.getFlowName()).thenReturn("myFlow");
    when(faultyHandler.deserializeRequest(any())).thenReturn(faultyRequest);
    when(faultyHandler.extractCorrelationId(any())).thenReturn(corrId);
    when(faultyHandler.handleRequest(any())).thenThrow(new RuntimeException("forced error"));

    // Inject faulty handler into registry
    flowConfig.setFlowName("myFlow"); // ensure config matches
    consumer.getRegistry().register("myFlow", faultyHandler);

    await()
            .atMost(2, TimeUnit.SECONDS)
            .pollInterval(100, TimeUnit.MILLISECONDS)
            .untilAsserted(() -> {
                assertFalse(testCollector.wasSent(flowConfig.responseTopic()), "No response should be sent on handler error");
                assertTrue(requestMap.containsKey(corrId), "Request should remain for retry");
                assertEquals("", routerMap.get(routeKey), "Claim should be reverted to original");
            });
}


------


DummyMessage mockRequest = new DummyMessage(); // Real instance




--------


