private DisputeTransactionResponseDto lookUpTransactionId(String issuerId,
                                                          String arn,
                                                          DisputeTransactionsRequestDto requestDto) {
    try {
        // Basic Auth header
        String basicAuth = Base64.getEncoder().encodeToString(
                (username + ":" + password).getBytes(StandardCharsets.UTF_8)
        );

        // POST call
        String json = webClient.post()
                .uri(uriBuilder -> uriBuilder.path(pathLookupTransactionId).build())
                .header("WL-Correlation-ID", "pkptuna-" + System.currentTimeMillis())
                .header("WL-Origin", "pkptuna-service")
                .header(HttpHeaders.AUTHORIZATION, "Basic " + basicAuth)
                .header(HttpHeaders.CONTENT_TYPE, "application/json")
                .header(HttpHeaders.ACCEPT, "application/json")
                // Mapper must translate:
                // issuer_id -> "issuerId"
                // acquirerReferenceId[] -> "acquirerReferenceDataList":[...]
                .bodyValue(disputeTransactionsRequestDtoMapper.toRestDto(requestDto))
                .retrieve()
                .bodyToMono(String.class)
                .block();

        // Parse JSON -> Proto (fills everything, including repeated fields)
        DisputeTransactionResponseDto.Builder builder = DisputeTransactionResponseDto.newBuilder();
        ProtobufJsonUtil.parseJsonToProto(json, builder);
        return builder.build();

    } catch (WebClientResponseException e) {
        // Build a structured error response with metadata
        return DisputeTransactionResponseDto.newBuilder()
                .setResponseMetadata(ResponseMetadataDto.newBuilder()
                        .setCorrelationId(e.getResponseHeaders() != null
                                ? e.getResponseHeaders().getFirst("WL-Correlation-ID")
                                : "")
                        .setStatusMessage("HTTP " + e.getStatusCode().value() + " - " + e.getStatusText())
                        .setStatusCode(e.getStatusCode().value())
                        .setResponseDateTime(java.time.OffsetDateTime.now().toString())
                        .setTimeTakenMs(0)
                        .build())
                // leave data empty on error
                .build();

    } catch (Exception e) {
        LOGGER.error("Exception during transactionId lookup (issuerId={}, arn={})", issuerId, arn, e);
        return DisputeTransactionResponseDto.newBuilder()
                .setResponseMetadata(ResponseMetadataDto.newBuilder()
                        .setCorrelationId("")
                        .setStatusMessage("ERROR - " + e.getClass().getSimpleName() + ": " + e.getMessage())
                        .setStatusCode(500)
                        .setResponseDateTime(java.time.OffsetDateTime.now().toString())
                        .setTimeTakenMs(0)
                        .build())
                .build();
    }
}
