@BeforeEach
public void setup() {
    hazelcastInstance = mock(HazelcastInstance.class);
    handlerRegistry = mock(FlowHandlerRegistry.class);
    handler = mock(FlowHandler.class);

    // Mock maps and topic
    topic = mock(ITopic.class);
    routerMap = mock(IMap.class);
    targetMap = mock(IMap.class);

    // Mock FlowConfig
    config = mock(FlowConfig.class);
    when(config.name()).thenReturn("myFlow");
    when(config.requestTopic()).thenReturn("topic1");
    when(config.mapBase()).thenReturn("map-");
    when(config.partitions()).thenReturn(2);

    // Return mocked handler from registry
    when(handlerRegistry.getHandler("myFlow")).thenReturn(handler);

    // Return the mocked topic for the configured topic name
    when(hazelcastInstance.getReliableTopic("topic1")).thenReturn((ITopic) topic);

    // Set up leader and routing maps
    IMap<String, String> leaderMap = mock(IMap.class);
    when(hazelcastInstance.getMap("router-leader-map")).thenReturn(leaderMap);
    when(hazelcastInstance.getMap("router-claim-map")).thenReturn((IMap) routerMap);

    // Return target map for dynamic partition maps
    when(hazelcastInstance.getMap(startsWith("map-"))).thenReturn((IMap) targetMap);

    // Simulate that this instance IS the leader by default
    String testRouterInstanceId = "instance-A";
    when(leaderMap.get("leader-myFlow")).thenReturn(testRouterInstanceId);

    // Inject fixed routerInstanceId to GenericHazelcastRouter
    router = new GenericHazelcastRouter(hazelcastInstance, List.of(config), handlerRegistry, testRouterInstanceId);
    router.initRouters();
}
