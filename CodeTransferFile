@Override
public void onMessage(Message<byte[]> message) {
    try {
        // ðŸ‘‡ Check leadership before proceeding
        String currentLeader = hazelcastInstance.getMap("router-leader-map").get("leader-" + flowName);
        if (!routerInstanceId.equals(currentLeader)) {
            LOGGER.debug("Instance is not leader for flow '{}', skipping", flowName);
            return;
        }

        T request = handler.deserializeRequest(message.getMessageObject());
        String correlationId = handler.extractCorrelationId(request);
        String lockKey = "route-lock-" + correlationId;

        IMap<String, String> routerMap = hazelcastInstance.getMap("router-claim-map");
        String uniqueId = UUID.randomUUID().toString();

        String existing = routerMap.putIfAbsent(lockKey, uniqueId);
        if (existing != null) {
            LOGGER.info("Skipped duplicate routing for correlationId={}", correlationId);
            return;
        }

        int index = roundRobinCounters.get(flowName).getAndIncrement() % config.partitions();
        String mapKey = config.mapBase() + index;

        hazelcastInstance.getMap(mapKey).put(correlationId, request);
        LOGGER.info("Routed correlationId='{}' to map '{}'", correlationId, mapKey);

    } catch (Exception e) {
        LOGGER.error("Routing failure for flow '{}': {}", flowName, e.getMessage(), e);
    }
}
